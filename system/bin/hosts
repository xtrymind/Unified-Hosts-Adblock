if [ ! -d /sbin/.core/mirror/bin ]; then
  mkdir -p /sbin/.core/mirror/bin
  mount -o bind /data/adb/magisk /sbin/.core/mirror/bin
fi
echo "Unified Hosts Adblocker"
alias wget="/sbin/.core/busybox/wget"
alias grep="/sbin/.core/busybox/grep"
alias cat="/sbin/.core/busybox/cat"
HOST=/sbin/.core/img/.core/hosts
TREADME=/cache/uhatreadme
FILTER=/sbin/.core/img/unifiedhostsadblock/filter
WHITELIST=/sdcard/whitelist
BLACKLIST=/sdcard/blacklist
UNBLOCK=/sdcard/unblock
TEMP=/cache/uhatemp
COUNT=1
wget -q -O $TREADME --no-check-certificate https://raw.githubusercontent.com/StevenBlack/hosts/master/readme.md
grep "Last updated:" $TREADME
if [ -f $FILTER ]; then
	CURRENT=$(grep "Last updated:" $TREADME)
	LAST_UPDATED=$(sed '1q;d' $FILTER)
	if [ "$LAST_UPDATED" != "$CURRENT" ]; then
		echo "Updates are available"
	else
		echo "No updates available"
	fi
else
	touch $FILTER
	echo "No hosts file yet applied"
fi
while true
do
	INPUT=$(eval "echo \$$COUNT")
	if [ ! "$INPUT" ]; then
		if [ "$1" ]; then
			rm -f $TREADME
			exit 0
		fi
		echo ""
		echo "You can use any combination of the letters below"
		echo "For example: inputting 'fps' would yield master+fakenews+porn+social"
		echo "Select an option below:"
		echo "--------------------------------"
		echo "'m' for adware+malware"
		echo "'f' for master+fakenews"
		echo "'g' for master+gambling"
		echo "'p' for master+porn"
		echo "'s' for master+social"
		echo "To disable, just toggle the enable systemless hosts in magisk manager"
		echo "'b' to add blacklist"
		echo "'w' to add whitelist (search for exact strings)"
		echo "'wr' to add whitelist (use regex - needed for wildcards)"
		echo "'ub' to add unblock site"
		echo -n "'q' to quit: "
		read -r INPUT
		if [ "$INPUT" != "m" ]; then
			INPUT="$(echo "$INPUT" | sed 's/m//g')"
		fi
		DIR=""
	fi
	case "$INPUT" in
		m) DIR="master/hosts"
		;;
		f) DIR="master/alternates/fakenews/hosts"
		;;
		fg|gf) DIR="master/alternates/fakenews-gambling/hosts"
		;;
		fgp|fpg|gfp|gpf|pfg|pgf) DIR="master/alternates/fakenews-gambling-porn/hosts"
		;;
		fgps|fgsp|fpgs|fpsg|fspg|fsgp|gfps|gfsp|gpfs|gpsf|gsfp|gspf|pfgs|pfsg|pgfs|pgsf|psfg|psgf|sfgp|sfpg|sgfp|sgpf|spfg|spgf) DIR="master/alternates/fakenews-gambling-porn-social/hosts"
		;;
		fgs|fsg|gfs|gsf|sfg|sgf) DIR="master/alternates/fakenews-gambling-social/hosts"
		;;
		fp|pf) DIR="master/alternates/fakenews-porn/hosts"
		;;
		fps|fsp|pfs|psf|sfp|spf) DIR="master/alternates/fakenews-porn-social/hosts"
		;;
		fs|sf) DIR="master/alternates/fakenews-social/hosts"
		;;
		g) DIR="master/alternates/gambling/hosts"
		;;
		gp|pg) DIR="master/alternates/gambling-porn/hosts"
		;;
		gps|gsp|pgs|psg|sgp|spg) DIR="master/alternates/gambling-porn-social/hosts"
		;;
		gs|sg) DIR="master/alternates/gambling-social/hosts"
		;;
		p) DIR="master/alternates/porn/hosts"
		;;
		ps|sp) DIR="master/alternates/porn-social/hosts"
		;;
		s) DIR="master/alternates/social/hosts"
		;;
		w)  if [ ! -f $WHITELIST ]; then
				echo ""
				echo "*No Whitelist detected*"
				echo "Copy your whilelist to /sdcard"
		    else
				if [ -f "$HOST" ]; then
					echo ""
					echo "Applying Whitelist"
					grep -Fvxf $WHITELIST $HOST > $TEMP
					mv $TEMP $HOST
				else
					echo ""
					echo "No hosts file detected"
					echo "Apply a hosts file first"
				fi
		    fi
		;;
		wr)  if [ ! -f $WHITELIST ]; then
				echo ""
				echo "*No Whitelist detected*"
				echo "Copy your whilelist to /sdcard"
		    else
				if [ -f "$HOST" ]; then
					echo ""
					echo "Applying Whitelist (regex)"
					grep -vxf $WHITELIST $HOST > $TEMP
					mv $TEMP $HOST
				else
					echo ""
					echo "No hosts file detected"
					echo "Apply a hosts file first"
				fi
		    fi
		;;
		b)	if [ ! -f $BLACKLIST ]; then
				echo ""
				echo "*No Blacklist detected*"
				echo "Copy your blacklist to /sdcard"
			else
				if [ -f "$HOST" ]; then
					if [ -s $BLACKLIST ]; then
						echo ""
						echo "Applying Blacklist"
						NEWFILTERS="$(cat $BLACKLIST)"
						printf '%s\n' "$NEWFILTERS" | while IFS= read -r linenew
						do
						  if [ ! "$(grep -Fx "$linenew" $HOST)" ]; then
							sed -i -e "\$a0.0.0.0 $linenew" $HOST
						  fi
						done
					else
						echo ""
						echo "Blacklist file is empty"
						echo "No new filter rules added"
					fi
				else
					echo ""
					echo "No hosts file detected"
					echo "Apply a hosts file first"
				fi
		    fi
		;;
		ub)	if [ ! -f $UNBLOCK ]; then
				echo ""
				echo "*No Unblock detected*"
				echo "Copy your unblock to /sdcard"
			else
				if [ -f "$HOST" ]; then
					if [ -s $UNBLOCK ]; then
						echo ""
						echo "Applying Unblock"
						cat $HOST $UNBLOCK > $TEMP
						mv $TEMP $HOST
					else
						echo ""
						echo "Unblock file is empty"
						echo "No new filter rules added"
					fi
				else
					echo ""
					echo "No hosts file detected"
					echo "Apply a hosts file first"
				fi
		    fi
		;;
		q) break
		;;
		*)  echo ""
			echo "Invalid input. Don't use any spaces between letters"
		;;
	esac
	if [ $DIR ]; then
		echo ""
		wget -O $HOST --no-check-certificate https://raw.githubusercontent.com/StevenBlack/hosts/$DIR
		grep "Last updated:" $TREADME > $FILTER
	fi
	DIR=""
	COUNT=$((COUNT+1))
done
rm -f $TREADME
echo "Done!"
